openapi: "3.0.3"
info:
  title: Parquimetro API
  version: "1.0"
  description: API de Gerenciamento de Parquimetros
servers:
  - url: http://localhost:8080
    description: Local server
tags:
  - name: Parquimetro
    description: Operações do Parquimetro
  - name: TicketParquimetro
    description: Operações do de ticket do Parquimetro
paths:
  /parquimetro:
    get:
      tags:
        - Parquimetro
      summary: Lista todos os parquimetros
      description: Lista todos os parquimetros
      operationId: listaParquimetros
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            example: 0
          description: Numero da página
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            example: 10
          description: Tamanho da página
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParquimetroPaginado"
    post:
      tags:
        - Parquimetro
      summary: Cria um Parquimetro
      description: Cria um novo Parquimetro
      operationId: criaParquimetro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateParquimetro"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parquimetro"
        "400":
          description: Bad request
        "422":
          description: Unprocessable entity
  /parquimetro/{id}:
    get:
      tags:
        - Parquimetro
      summary: Retorna um parquimetro pelo ID
      description: Retorna um parquimetro pelo ID
      operationId: listaParquimetroPeloId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: ID do Parquimetro
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parquimetro"
        "400":
          description: Bad request
        "404":
          description: Not found
    delete:
      tags:
        - Parquimetro
      summary: Deleta um Parquimetro pelo ID
      description: Deleta um Parquimetro pelo ID
      operationId: deletaParquimetroPeloId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: ID do Parquimetro
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
    put:
      tags:
        - Parquimetro
      summary: Atualiza um Parquimetro pelo ID
      description: Atualiza um Parquimetro pelo ID
      operationId: atualizaUmParquimetroPeloId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
          description: Parquimetro ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateParquimetro"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parquimetro"
        "400":
          description: Bad request
        "404":
          description: Not found"
        "422":
          description: Unprocessable entity
  /ticketParquimetro:
    get:
      tags:
        - TicketParquimetro
      summary: Lista todos tickets referente aos parquimetros de forma paginada
      description: Lista todos tickets referente aos parquimetros de forma paginada
      operationId: listaTicketsParquimetrosPaginado
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            example: 0
          description: Numero da página
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            example: 10
          description: Tamanho da página
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TicketParquimetroPaginado"
    post:
      tags:
        - TicketParquimetro
      summary: Cria um novo Ticket referente ao Parquimetro
      description: Cria um novo Ticket referente Parquimetro
      operationId: registraEntradaParquimetro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTicketParquimetro"
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "422":
          description: Unprocessable entity
    put:
      tags:
        - TicketParquimetro
      summary: Atualiza um Ticket referente ao Parquimetro para marcar a saída do parquimetro
      description: Atualiza um Ticket referente ao Parquimetro para marcar a saída do parquimetro
      operationId: registraSaidaParquimetro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTicketParquimetro"
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "404":
          description: Not found"
        "422":
          description: Unprocessable entity
components:
  schemas:
    CreateParquimetro:
      type: object
      properties:
        endereco:
          type: string
          example: "Endereco teste"
          maxLength: 255
        precoPorHora:
          type: number
          format: double
          example: 1
      required:
        - endereco
        - precoPorHora
    UpdateParquimetro:
      type: object
      properties:
        endereco:
          type: string
          example: "Endereco teste"
          maxLength: 255
        precoPorHora:
          type: number
          format: double
          example: 1
        status:
          type: string
          enum:
            - OCUPADO
            - LIVRE
    CreateTicketParquimetro:
      type: object
      properties:
        idParquimetro:
          type: integer
          format: int64
          example: 1
        placaCarro:
          type: string
          example: "BRA2E19"
      required:
        - idParquimetro
        - placaCarro
    UpdateTicketParquimetro:
      type: object
      properties:
        idParquimetro:
          type: integer
          format: int64
          example: 1
        placaCarro:
          type: string
          example: "BRA2E19"
      required:
        - idParquimetro
        - placaCarro
    TicketParquimetro:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        id_parquimetro:
          type: integer
          format: int64
          example: 1
        placa_carro:
          type: string
          example: "BRA2E19"
        hora_cadastro:
          type: string
          format: date-time
          example: '2024-10-04T00:00:00Z'
        hora_saida:
          type: string
          format: date-time
          example: '2024-10-04T00:00:00Z'
    Parquimetro:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        endereco:
          type: string
          example: "Endereço 1"
          maxLength: 255
        precoPorHora:
          type: number
          format: double
          example: 1.0
        dataCadastro:
          type: string
          format: date-time
          example: '2024-10-04T00:00:00Z'
        status:
          type: string
          enum:
            - OCUPADO
            - LIVRE
    TicketParquimetroPaginado:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TicketParquimetro"
        pagination:
          $ref: "#/components/schemas/Pagination"
    ParquimetroPaginado:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Parquimetro"
        pagination:
          $ref: "#/components/schemas/Pagination"
    Pagination:
      type: object
      properties:
        page:
          type: integer
          format: int32
          example: 0
          description: Page number
        size:
          type: integer
          format: int32
          example: 10
          description: Page size
        total:
          type: integer
          format: int32
          example: 100
          description: Total number of TicketParquimetros
        totalPages:
          type: integer
          format: int32
          example: 10
          description: Total number of pages